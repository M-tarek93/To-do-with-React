{"ast":null,"code":"var _jsxFileName = \"/home/tarek/to-do/src/components/Todo.js\";\nimport React from 'react';\nimport ToDoForm from './ToDoForm';\nimport ToDoTasks from './ToDoTasks';\nimport DoneTasks from './DoneTasks';\nimport DeletedTasks from './DeletedTasks';\n\nclass ToDo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      completed: [],\n      deleted: []\n    };\n\n    this.addTask = task => {\n      this.setState({\n        tasks: this.state.tasks.concat(task)\n      });\n    };\n\n    this.tasks = [];\n    this.completed = [];\n    this.deleted = [];\n\n    this.handleTask = (type, task) => {\n      switch (type) {\n        case 'remove':\n        case 'complete':\n          // let tasks = [...this.state.tasks];\n          let index = this.tasks.indexOf(task);\n\n          if (index !== -1) {\n            this.tasks.splice(index, 1);\n            this.setState({\n              tasks: this.tasks\n            });\n          }\n\n          type === 'remove' ? this.setState({\n            deleted: this.state.deleted.concat(task)\n          }) : this.setState({\n            completed: this.state.completed.concat(task)\n          });\n          break;\n\n        case 'undo':\n          // let completed = [...this.state.completed];\n          let i = this.completed.indexOf(task);\n\n          if (i !== -1) {\n            this.completed.splice(i, 1);\n            this.setState({\n              completed: this.completed\n            });\n          }\n\n          this.setState({\n            tasks: this.state.tasks.concat(task)\n          });\n          break;\n\n        case 'recover':\n          // let deleted = [...this.state.deleted];\n          let j = this.deleted.indexOf(task);\n\n          if (j !== -1) {\n            this.deleted.splice(j, 1);\n            this.setState({\n              deleted: this.deleted\n            });\n          }\n\n          this.setState({\n            tasks: this.state.tasks.concat(task)\n          });\n          break;\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    tasks = [...this.state.tasks];\n    completed = [...this.state.completed];\n    deleted = [...this.state.deleted];\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-20 flex-column justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(ToDoForm, {\n      className: \"col-lg \",\n      addTask: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"d-flex justify-content-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(ToDoTasks, {\n      tasks: this.state.tasks,\n      handleTask: this.handleTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(DoneTasks, {\n      completed: this.state.completed,\n      handleTask: this.handleTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(DeletedTasks, {\n      deleted: this.state.deleted,\n      handleTask: this.handleTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/home/tarek/to-do/src/components/Todo.js"],"names":["React","ToDoForm","ToDoTasks","DoneTasks","DeletedTasks","ToDo","Component","state","tasks","completed","deleted","addTask","task","setState","concat","handleTask","type","index","indexOf","splice","i","j","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ToDoForm from './ToDoForm';\nimport ToDoTasks from './ToDoTasks';\nimport DoneTasks from './DoneTasks';\nimport DeletedTasks from './DeletedTasks';\n\nclass ToDo extends React.Component {\n\n    state = {\n        tasks: [],\n        completed: [],\n        deleted: []\n    }\n\n    addTask = (task) => {\n        this.setState({ tasks: this.state.tasks.concat(task) });\n    }\n\n    tasks = [];\n    completed = [];\n    deleted = [];\n    componentDidUpdate(){\n    tasks = [...this.state.tasks];\n    completed = [...this.state.completed];\n    deleted = [...this.state.deleted];\n    }\n\n    handleTask = (type, task) => {\n        switch (type) {\n            case 'remove':\n            case 'complete':\n                // let tasks = [...this.state.tasks];\n                let index = this.tasks.indexOf(task);\n                if (index !== -1) {\n                    this.tasks.splice(index, 1);\n                    this.setState({ tasks: this.tasks });\n                }\n                type === 'remove' ? this.setState({ deleted: this.state.deleted.concat(task) })\n                    : this.setState({ completed: this.state.completed.concat(task) });\n                break;\n            case 'undo':\n                // let completed = [...this.state.completed];\n                let i = this.completed.indexOf(task);\n                if (i !== -1) {\n                    this.completed.splice(i, 1);\n                    this.setState({ completed: this.completed });\n                }\n                this.setState({ tasks: this.state.tasks.concat(task) });\n                break;\n            case 'recover':\n                // let deleted = [...this.state.deleted];\n                let j = this.deleted.indexOf(task);\n                if (j !== -1) {\n                    this.deleted.splice(j, 1);\n                    this.setState({ deleted: this.deleted });\n                }\n                this.setState({ tasks: this.state.tasks.concat(task) });\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div className='col-20 flex-column justify-content-center'>\n            <ToDoForm className='col-lg ' addTask={this.addTask} />\n            <div className='d-flex justify-content-around'>\n                <ToDoTasks tasks={this.state.tasks} handleTask={this.handleTask} />\n                <DoneTasks completed={this.state.completed} handleTask={this.handleTask} />\n                <DeletedTasks deleted={this.state.deleted} handleTask={this.handleTask} />\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}