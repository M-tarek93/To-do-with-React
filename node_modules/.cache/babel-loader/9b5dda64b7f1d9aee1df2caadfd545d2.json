{"ast":null,"code":"var _jsxFileName = \"/home/tarek/to-do/src/components/Todo.js\";\nimport React from 'react';\nimport ToDoForm from './ToDoForm';\nimport ToDoTasks from './ToDoTasks';\nimport DoneTasks from './DoneTasks';\nimport DeletedTasks from './DeletedTasks';\n\nclass ToDo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      completed: [],\n      deleted: []\n    };\n\n    this.addTask = task => {\n      this.setState({\n        tasks: this.state.tasks.concat(task)\n      });\n    };\n\n    this.tasks = [];\n    this.completed = [];\n    this.deleted = [];\n\n    this.handleTask = (type, task) => {\n      switch (type) {\n        case 'remove':\n        case 'complete':\n          this.tasks.splice(this.tasks.indexOf(task), 1);\n          this.setState({\n            tasks: this.tasks\n          });\n          type === 'remove' ? this.setState({\n            deleted: this.state.deleted.concat(task)\n          }) : this.setState({\n            completed: this.state.completed.concat(task)\n          });\n          break;\n\n        case 'removeCompleted':\n        case 'undo':\n          this.completed.splice(this.completed.indexOf(task), 1);\n          this.setState({\n            completed: this.completed\n          });\n          type === 'removeCompleted' ? this.setState({\n            deleted: this.state.deleted.concat(task)\n          }) : this.setState({\n            tasks: this.state.tasks.concat(task)\n          });\n          break;\n\n        case 'recover':\n          this.deleted.splice(this.deleted.indexOf(task), 1);\n          this.setState({\n            deleted: this.deleted\n          });\n          this.setState({\n            tasks: this.state.tasks.concat(task)\n          });\n          break;\n      }\n    };\n  }\n\n  componentDidUpdate() {\n    this.tasks = [...this.state.tasks];\n    this.completed = [...this.state.completed];\n    this.deleted = [...this.state.deleted];\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"col-20 flex-column justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(ToDoForm, {\n      className: \"column\",\n      addTask: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(ToDoTasks, {\n      tasks: this.state.tasks,\n      handleTask: this.handleTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(DoneTasks, {\n      completed: this.state.completed,\n      handleTask: this.handleTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(DeletedTasks, {\n      deleted: this.state.deleted,\n      handleTask: this.handleTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/home/tarek/to-do/src/components/Todo.js"],"names":["React","ToDoForm","ToDoTasks","DoneTasks","DeletedTasks","ToDo","Component","state","tasks","completed","deleted","addTask","task","setState","concat","handleTask","type","splice","indexOf","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ToDoForm from './ToDoForm';\nimport ToDoTasks from './ToDoTasks';\nimport DoneTasks from './DoneTasks';\nimport DeletedTasks from './DeletedTasks';\n\nclass ToDo extends React.Component {\n\n    state = {\n        tasks: [],\n        completed: [],\n        deleted: []\n    }\n\n    addTask = (task) => {\n        this.setState({ tasks: this.state.tasks.concat(task) });\n    }\n\n    tasks = [];\n    completed = [];\n    deleted = [];\n\n    componentDidUpdate() {\n        this.tasks = [...this.state.tasks];\n        this.completed = [...this.state.completed];\n        this.deleted = [...this.state.deleted];\n    }\n\n    handleTask = (type, task) => {\n        switch (type) {\n            case 'remove':\n            case 'complete':\n                this.tasks.splice(this.tasks.indexOf(task), 1);\n                this.setState({ tasks: this.tasks });\n                type === 'remove' ? this.setState({ deleted: this.state.deleted.concat(task) })\n                    : this.setState({ completed: this.state.completed.concat(task) });\n                break;\n            case 'removeCompleted':\n            case 'undo':\n                this.completed.splice(this.completed.indexOf(task), 1);\n                this.setState({ completed: this.completed });\n                type === 'removeCompleted' ? this.setState({ deleted: this.state.deleted.concat(task) })\n                    : this.setState({ tasks: this.state.tasks.concat(task) });\n                break;\n            case 'recover':\n                this.deleted.splice(this.deleted.indexOf(task), 1);\n                this.setState({ deleted: this.deleted });\n                this.setState({ tasks: this.state.tasks.concat(task) });\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div className='col-20 flex-column justify-content-center'>\n                <ToDoForm className='column' addTask={this.addTask} />\n                <div className='row'>\n                    <ToDoTasks tasks={this.state.tasks} handleTask={this.handleTask} />\n                    <DoneTasks completed={this.state.completed} handleTask={this.handleTask} />\n                    <DeletedTasks deleted={this.state.deleted} handleTask={this.handleTask} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}