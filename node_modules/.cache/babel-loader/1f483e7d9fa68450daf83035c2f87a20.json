{"ast":null,"code":"var _jsxFileName = \"/home/tarek/to-do/src/components/Todo.js\";\nimport React, { useState } from 'react';\nimport ToDoForm from './ToDoForm';\nimport ToDoTasks from './ToDoTasks';\nimport DoneTasks from './DoneTasks'; // import ToDoDone from './ToDoDone';\n// import ToDoDeleted from './ToDoDeleted';\n\nclass ToDo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      completed: [],\n      deleted: []\n    };\n\n    this.addTask = task => {\n      this.setState({\n        tasks: this.state.tasks.concat(task)\n      });\n    };\n\n    this.handleTask = (type, task) => {\n      let tasks = [...this.state.tasks];\n      let index = tasks.indexOf(task);\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n        this.setState({\n          tasks: tasks\n        });\n      }\n\n      type === 'remove' ? this.setState({\n        deleted: this.state.deleted.concat(task)\n      }) : this.setState({\n        completed: this.state.completed.concat(task)\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    console.log('after', this.state.deleted[0]);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(ToDoForm, {\n      addTask: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(ToDoTasks, {\n      tasks: this.state.tasks,\n      handleTask: this.handleTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(DoneTasks, {\n      completed: this.state.completed,\n      handleTask: this.handleTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/home/tarek/to-do/src/components/Todo.js"],"names":["React","useState","ToDoForm","ToDoTasks","DoneTasks","ToDo","Component","state","tasks","completed","deleted","addTask","task","setState","concat","handleTask","type","index","indexOf","splice","componentDidUpdate","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;AACA;;AAEA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEvB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,OAAO,EAAE;AAHL,KAFuB;;AAAA,SAQ/BC,OAR+B,GAQpBC,IAAD,IAAU;AAChB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBM,MAAjB,CAAwBF,IAAxB;AAAT,OAAd;AACH,KAV8B;;AAAA,SAgC/BG,UAhC+B,GAgClB,CAACC,IAAD,EAAMJ,IAAN,KAAc;AACvB,UAAIJ,KAAK,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,CAAZ;AACA,UAAIS,KAAK,GAAGT,KAAK,CAACU,OAAN,CAAcN,IAAd,CAAZ;;AACA,UAAIK,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdT,QAAAA,KAAK,CAACW,MAAN,CAAaF,KAAb,EAAmB,CAAnB;AACA,aAAKJ,QAAL,CAAc;AAACL,UAAAA,KAAK,EAAEA;AAAR,SAAd;AACH;;AACDQ,MAAAA,IAAI,KAAK,QAAT,GAAoB,KAAKH,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG,OAAX,CAAmBI,MAAnB,CAA0BF,IAA1B;AAAX,OAAd,CAApB,GACE,KAAKC,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE,SAAX,CAAqBK,MAArB,CAA4BF,IAA5B;AAAb,OAAd,CADF;AAEH,KAzC8B;AAAA;;AA2C/BQ,EAAAA,kBAAkB,GAAE;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,KAAKf,KAAL,CAAWG,OAAX,CAAmB,CAAnB,CAApB;AACH;;AACDa,EAAAA,MAAM,GAAG;AACL,WACI,0CACI,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,KAAKZ,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KAA7B;AAAoC,MAAA,UAAU,EAAE,KAAKO,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAE,KAAKR,KAAL,CAAWE,SAAjC;AAA4C,MAAA,UAAU,EAAE,KAAKM,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAWH;;AA1D8B;;AAiEnC,eAAeV,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport ToDoForm from './ToDoForm';\nimport ToDoTasks from './ToDoTasks';\nimport DoneTasks from './DoneTasks';\n// import ToDoDone from './ToDoDone';\n// import ToDoDeleted from './ToDoDeleted';\n\nclass ToDo extends React.Component {\n\n    state = {\n        tasks: [],\n        completed: [],\n        deleted: []\n    }\n\n    addTask = (task) => {\n        this.setState({ tasks: this.state.tasks.concat(task) });\n    }\n\n    // removeTask = (task) => {\n    //     let tasks = [...this.state.tasks];\n    //     let index = tasks.indexOf(task);\n    //     if (index !== -1) {\n    //     tasks.splice(index,1);\n    //     this.setState({tasks: tasks});\n    //     }\n    //     this.setState({ deleted: this.state.deleted.concat(task) });\n    // }\n\n    // completeTask = (task) => {\n    //     let tasks = [...this.state.tasks];\n    //     let index = tasks.indexOf(task);\n    //     if (index !== -1) {\n    //     tasks.splice(index,1);\n    //     this.setState({tasks: tasks});\n    //     }\n    //     this.setState({ completed: this.state.completed.concat(task) });\n    // }\n\n    handleTask = (type,task) =>{\n        let tasks = [...this.state.tasks];\n        let index = tasks.indexOf(task);\n        if (index !== -1) {\n            tasks.splice(index,1);\n            this.setState({tasks: tasks});\n        }\n        type === 'remove' ? this.setState({ deleted: this.state.deleted.concat(task) })\n        : this.setState({ completed: this.state.completed.concat(task) });\n    }\n\n    componentDidUpdate(){\n        console.log('after',this.state.deleted[0])\n    }\n    render() {\n        return (\n            <>\n                <ToDoForm addTask={this.addTask} />\n                <ToDoTasks tasks={this.state.tasks} handleTask={this.handleTask}/>\n                <DoneTasks completed={this.state.completed} handleTask={this.handleTask} />\n                {/* <ToDoDone />\n                <ToDoDeleted /> */}\n            </>\n        );\n\n\n    }\n}\n\n\n\n\n\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}